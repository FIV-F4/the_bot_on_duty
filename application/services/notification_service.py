from typing import List
from datetime import datetime

from domain.entities.failure import Failure
from infrastructure.telegram.telegram_client import TelegramClient

class NotificationService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏"""
    
    def __init__(self, telegram_client: TelegramClient):
        self.telegram = telegram_client
    
    async def notify_failure_created(self, failure: Failure) -> None:
        """–£–≤–µ–¥–æ–º–∏—Ç—å –æ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–±–æ—è"""
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
        await self.telegram.send_message(
            chat_id=self.telegram.availability_channel_id,
            text=(
                f"üö® –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Å–±–æ–π!\n\n"
                f"–ó–∞–≥–æ–ª–æ–≤–æ–∫: {failure.title}\n"
                f"–û–ø–∏—Å–∞–Ω–∏–µ: {failure.description}\n"
                f"–°–æ–∑–¥–∞–Ω: {failure.created_at.strftime('%Y-%m-%d %H:%M')}"
            )
        )
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ–º—É –≤ –∫–∞–Ω–∞–ª–µ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è —Å–±–æ–µ–≤
        thread_id = await self.telegram.create_thread(
            chat_id=self.telegram.resolution_channel_id,
            title=f"–°–±–æ–π: {failure.title}",
            text=(
                f"–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Å–±–æ–π\n\n"
                f"–ó–∞–≥–æ–ª–æ–≤–æ–∫: {failure.title}\n"
                f"–û–ø–∏—Å–∞–Ω–∏–µ: {failure.description}\n"
                f"–°–æ–∑–¥–∞–Ω: {failure.created_at.strftime('%Y-%m-%d %H:%M')}\n"
                f"–°–æ–∑–¥–∞–ª: {failure.created_by}"
            )
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º ID —Ç–µ–º—ã –≤ —Å–±–æ–µ
        failure.telegram_thread_id = thread_id
    
    async def notify_failure_extended(self, failure: Failure) -> None:
        """–£–≤–µ–¥–æ–º–∏—Ç—å –æ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏ —Å–±–æ—è"""
        if not failure.telegram_thread_id:
            return
            
        await self.telegram.send_message(
            chat_id=self.telegram.resolution_channel_id,
            thread_id=failure.telegram_thread_id,
            text=(
                f"‚è≥ –°–±–æ–π –ø—Ä–æ–¥–ª–µ–Ω\n\n"
                f"–ü—Ä–æ–¥–ª–µ–Ω: {datetime.now().strftime('%Y-%m-%d %H:%M')}\n"
                f"–ü—Ä–æ–¥–ª–∏–ª: {failure.extended_by}"
            )
        )
    
    async def notify_failure_resolved(self, failure: Failure) -> None:
        """–£–≤–µ–¥–æ–º–∏—Ç—å –æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏ —Å–±–æ—è"""
        if not failure.telegram_thread_id:
            return
            
        await self.telegram.send_message(
            chat_id=self.telegram.resolution_channel_id,
            thread_id=failure.telegram_thread_id,
            text=(
                f"‚úÖ –°–±–æ–π —Ä–∞–∑—Ä–µ—à–µ–Ω\n\n"
                f"–†–∞–∑—Ä–µ—à–µ–Ω: {datetime.now().strftime('%Y-%m-%d %H:%M')}"
            )
        )
        
        # –£–≤–µ–¥–æ–º–ª—è–µ–º –≤ –∫–∞–Ω–∞–ª –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
        await self.telegram.send_message(
            chat_id=self.telegram.availability_channel_id,
            text=(
                f"‚úÖ –°–±–æ–π —Ä–∞–∑—Ä–µ—à–µ–Ω!\n\n"
                f"–ó–∞–≥–æ–ª–æ–≤–æ–∫: {failure.title}\n"
                f"–†–∞–∑—Ä–µ—à–µ–Ω: {datetime.now().strftime('%Y-%m-%d %H:%M')}"
            )
        )
    
    async def notify_needs_extension(self, failures: List[Failure]) -> None:
        """–£–≤–µ–¥–æ–º–∏—Ç—å –æ —Å–±–æ—è—Ö, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–¥–ª–∏—Ç—å"""
        for failure in failures:
            if not failure.telegram_thread_id:
                continue
                
            await self.telegram.send_message(
                chat_id=self.telegram.resolution_channel_id,
                thread_id=failure.telegram_thread_id,
                text=(
                    f"‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –°–±–æ–π –Ω—É–∂–Ω–æ –ø—Ä–æ–¥–ª–∏—Ç—å\n\n"
                    f"–°–±–æ–π –∞–∫—Ç–∏–≤–µ–Ω –±–æ–ª–µ–µ 24 —á–∞—Å–æ–≤\n"
                    f"–°–æ–∑–¥–∞–Ω: {failure.created_at.strftime('%Y-%m-%d %H:%M')}"
                )
            )
    
    async def notify_needs_resolution(self, failures: List[Failure]) -> None:
        """–£–≤–µ–¥–æ–º–∏—Ç—å –æ —Å–±–æ—è—Ö, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —Ä–∞–∑—Ä–µ—à–∏—Ç—å"""
        for failure in failures:
            if not failure.telegram_thread_id:
                continue
                
            await self.telegram.send_message(
                chat_id=self.telegram.resolution_channel_id,
                thread_id=failure.telegram_thread_id,
                text=(
                    f"‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –°–±–æ–π –Ω—É–∂–Ω–æ —Ä–∞–∑—Ä–µ—à–∏—Ç—å\n\n"
                    f"–°–±–æ–π –∞–∫—Ç–∏–≤–µ–Ω –±–æ–ª–µ–µ 48 —á–∞—Å–æ–≤\n"
                    f"–°–æ–∑–¥–∞–Ω: {failure.created_at.strftime('%Y-%m-%d %H:%M')}"
                )
            ) 